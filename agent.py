import os
import logging
from typing import List, Dict
from openai import OpenAI

class KumTanesiAgent:
    """KumTanesi AI Agent - TÃ¼rkÃ§e konuÅŸan akÄ±llÄ± asistan"""
    
    def __init__(self):
        # the newest OpenAI model is "gpt-5" which was released August 7, 2025.
        # do not change this unless explicitly requested by the user
        self.client = OpenAI(api_key=os.environ.get("OPENAI_API_KEY"))
        self.model = "gpt-5"
        self.system_prompt = """Sen KumTanesi adÄ±nda yardÄ±msever bir AI asistanÄ±sÄ±n. 
        TÃ¼rkÃ§e konuÅŸuyorsun ve kullanÄ±cÄ±lara her konuda yardÄ±m edebilirsin. 
        Samimi, dostÃ§a ve bilgilendirici bir tarzda yanÄ±t veriyorsun.
        
        Ã–zellikler:
        - Her zaman TÃ¼rkÃ§e yanÄ±t ver
        - KullanÄ±cÄ±ya karÅŸÄ± saygÄ±lÄ± ve yardÄ±msever ol
        - DetaylÄ± ve faydalÄ± bilgiler saÄŸla
        - GerektiÄŸinde Ã¶rnekler ver
        - AnlayÄ±ÅŸlÄ± ve sabÄ±rlÄ± ol
        
        AdÄ±n KumTanesi ve bir AI asistanÄ± olduÄŸunu unutma."""
        
    def get_response(self, user_message: str, conversation_history: List[Dict] = None) -> str:
        """KullanÄ±cÄ± mesajÄ±na AI yanÄ±tÄ± Ã¼ret"""
        try:
            # KonuÅŸma baÄŸlamÄ±nÄ± hazÄ±rla
            messages = [{"role": "system", "content": self.system_prompt}]
            
            # KonuÅŸma geÃ§miÅŸini ekle (son 8 mesaj)
            if conversation_history:
                recent_history = conversation_history[-8:] if len(conversation_history) > 8 else conversation_history
                messages.extend(recent_history)
            
            # Mevcut kullanÄ±cÄ± mesajÄ±nÄ± ekle
            messages.append({"role": "user", "content": user_message})
            
            # OpenAI API Ã§aÄŸrÄ±sÄ±
            response = self.client.chat.completions.create(
                model=self.model,
                messages=messages,
                max_tokens=1000,
                temperature=0.7,
                presence_penalty=0.1,
                frequency_penalty=0.1
            )
            
            return response.choices[0].message.content
            
        except Exception as e:
            logging.error(f"Agent response error: {str(e)}")
            return "ÃœzgÃ¼nÃ¼m, ÅŸu anda yanÄ±t veremiyorum. LÃ¼tfen daha sonra tekrar deneyin."
    
    def get_greeting(self) -> str:
        """KarÅŸÄ±lama mesajÄ±"""
        return """Merhaba! Ben KumTanesi, sizin AI asistanÄ±nÄ±zÄ±m. ğŸŒŸ

Size nasÄ±l yardÄ±mcÄ± olabilirim? Her tÃ¼rlÃ¼ sorunuza yanÄ±t verebilir, 
konuÅŸabiliriz veya ihtiyacÄ±nÄ±z olan bilgileri saÄŸlayabilirim.

BaÅŸlamak iÃ§in bana bir ÅŸeyler sorun! ğŸ˜Š"""
